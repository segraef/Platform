parameters:
      vmImage: $(vmImage)
      poolName: $(poolName)
      serviceConnection: '$(serviceConnection)'
      environment: ''
      whatif: false

parameters:
  removeDeployment: true
  prerelease: false
  templateFilePath: ''
  defaultJobTimeoutInMinutes: 120

stages:
  # - stage: validation
  #   displayName: Static validation
  #   jobs:
  #     - template: /.azuredevops/pipelineTemplates/jobs.validateModulePester.yml

  # - stage: deployment
  #   displayName: Deployment validation
  #   jobs:
  #     - template: /.azuredevops/pipelineTemplates/jobs.validateModuleDeployment.yml
  #       parameters:
  #         templateFilePath: '$(modulePath)/deploy.bicep'
  #         removeDeployment: '${{ parameters.removeDeployment }}'
  #         defaultJobTimeoutInMinutes: ${{ parameters.defaultJobTimeoutInMinutes }}

jobs:
      # Resource Group
      # --------------
      - template: /.pipelines/.templates/pipeline.jobs.artifact.deploy.yml
        parameters:
              jobName: Deploy_ResourceGroup
              displayName: 'Deploy ResourceGroup'
              moduleName: '$(RGModuleName)'
              moduleVersion: '$(RGModuleVersion)'
              parameterFilePath: '${{ parameters.resourceGroupName }}/parameters.json'
              vmImage: '${{ parameters.vmImage }}'
              poolName: '${{ parameters.poolName }}'
              serviceConnection: '${{ parameters.serviceConnection }}'
              environment: '${{ parameters.environment }}'
              whatif: '${{ parameters.whatif }}'
              enabled: true

      # Virtual Network
      # --------------
      - template: /.pipelines/.templates/pipeline.jobs.artifact.deploy.yml
        parameters:
              jobName: Deploy_Virtual_Network
              displayName: 'Deploy Virtual Network'
              moduleName: '$(NsgModuleName)'
              moduleVersion: '$(NsgModuleVersion)'
              parameterFilePath: '${{ parameters.resourceGroupName }}/virtualNetworks/parameters.json'
              vmImage: '${{ parameters.vmImage }}'
              poolName: '${{ parameters.poolName }}'
              serviceConnection: '${{ parameters.serviceConnection }}'
              environment: '${{ parameters.environment }}'
              whatif: '${{ parameters.whatif }}'
              enabled: true
              dependsOn:
                  - Deploy_ResourceGroup

      # Network Security Group
      # --------------
      - template: /.pipelines/.templates/pipeline.jobs.artifact.deploy.yml
        parameters:
              jobName: Deploy_Network_Security_Group
              displayName: 'Deploy Network Security Group'
              moduleName: '$(NsgModuleName)'
              moduleVersion: '$(NsgModuleVersion)'
              parameterFilePath: '${{ parameters.resourceGroupName }}/networkSecurityGroups/parameters.json'
              vmImage: '${{ parameters.vmImage }}'
              poolName: '${{ parameters.poolName }}'
              serviceConnection: '${{ parameters.serviceConnection }}'
              environment: '${{ parameters.environment }}'
              whatif: '${{ parameters.whatif }}'
              enabled: true
              dependsOn:
                  - Deploy_Virtual_Network

      # Route Table
      # --------------
      - template: /.pipelines/.templates/pipeline.jobs.artifact.deploy.yml
        parameters:
              jobName: Deploy_Route_Table
              displayName: 'Deploy route table'
              moduleName: '$(RouteTablesModuleName)'
              moduleVersion: '$(RouteTablesModuleVersion)'
              parameterFilePath: '${{ parameters.resourceGroupName }}/routeTables/parameters.json'
              vmImage: '${{ parameters.vmImage }}'
              poolName: '${{ parameters.poolName }}'
              serviceConnection: '${{ parameters.serviceConnection }}'
              environment: '${{ parameters.environment }}'
              whatif: '${{ parameters.whatif }}'
              enabled: true
              dependsOn:
                  - Deploy_Virtual_Network
